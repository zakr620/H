local s = {
    wp = game:GetService("Workspace"),
    reps = game:GetService("ReplicatedStorage"),
    tweenserv = game:GetService("TweenService"),
    guiserv = game:GetService("GuiService"),
    players = game:GetService("Players"),
    http = game:GetService("HttpService"),
    startergui = game:GetService("StarterGui"),
    vip = game:GetService("VirtualInputManager")
}


local manager = {}
manager.funcs = {}
manager.loops = {}

function manager:MakeLoop(name, func, time)
    self.loops[name] = {Running = false, Func = func, Time = time}
end

function manager:StopLoop(name)
    if not self.loops[name] then
        print("Loop: " .. name .. " doesn't exist")
        return
    end

    if self.loops[name].Running == true then
        self.loops[name].Running = false
    end
end

function manager:StartLoop(name)
    if not self.loops[name] then
        print("Loop: " .. name .. " doesn't exist")
        return
    end

    if self.loops[name].Running ~= true then 
        self.loops[name].Running = true 

        spawn(function()
            while self.loops[name].Running == true do
                local succ, err = pcall(function()
                    self.loops[name].Func()
                end)
    
                if not succ then
                    print("Loop: " .. name .. " Error: " .. err)
                end
                task.wait(self.loops[name].Time)
            end
        end)
    end
end

function manager:ChangeLoopTimer(name, time)
    if not self.loops[name] then
        print("Loop: " .. name .. " doesn't exist")
        return
    end

    self.loops[name].Time = time
end

function manager:Notify(title, text)
    s.startergui:SetCore("SendNotification", {
        Title = title or "Undefined",
        Text = text or "Undefined",
    })
end

function manager:Toggle(object, title, flag, func)
    local toggle = object:Toggle({
        Name = title or "Undefined",
        Default = false,
        Callback = func or function() end,
    }, tostring(flag))

    return toggle
end

function manager:Button(object, title, func)
    local button = object:Button({
        Name = title or "undefined",
        Callback = func or function() end
    })

    return button
end

function manager:InputBox(object, title, flag, func)
    local box = object:Input({
        Name = title or "undefined",
        Placeholder = "",
        AcceptedCharacters = "All",
        Callback = func or function() end,
    }, tostring(flag) or "undefined")

    return box
end

function manager:Slider(object, title, default, min, max, display, flag, func)
    local slider = object:Slider({
        Name = title or "undefined",
        Default = default or 10,
        Minimum = min or 1,
        Maximum = max or 20,
        DisplayMethod = display or "Tenths",
        Callback = func or function() end,
    }, tostring(flag) or "undefined")

    return slider
end

function manager:Dropdown(object, title, multi, options, default, flag, func)
    local Dropdown = object:Dropdown({
        Name = title or "undefined",
        Search = false,
        Multi = multi or false,
        Required = false,
        Options = options or {},
        Default = default or {},
        Callback = func or function() end,
    }, tostring(flag) or "undefined")

    return Dropdown
end

return manager
